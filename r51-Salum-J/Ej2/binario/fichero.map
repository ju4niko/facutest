
Configuración de la Memoria

Nombre           Origen             Longitud           Atributos
rom32            0x00000000ffff0000 0x000000000000f000 xr
rom16            0x000000000000f000 0x0000000000000fff xr
*default*        0x0000000000000000 0xffffffffffffffff

Guión del enlazador y mapa de memoria

                0x0000000000009000                __STACK_START_16 = 0x9000
                0x000000000000ffff                __STACK_END_16 = 0xffff
                0x0000000000070000                __STACK_START_32 = 0x70000
                0x000000000007ffff                __STACK_END_32 = 0x7ffff
                0x0000000000003fff                __STACK_SIZE_32 = ((__STACK_END_32 - __STACK_START_32) / 0x4)
                0x00000000ffff0000                vma_kernel32 = 0xffff0000

.codigo_kernel32
                0x00000000ffff0000       0xf6
 *(.kernel32)
 .kernel32      0x00000000ffff0000       0xc4 src/elf/pantalla.elf
                0x00000000ffff0000                clrsrc
                0x00000000ffff0035                print
 .kernel32      0x00000000ffff00c4       0x32 src/elf/kernel.elf
                0x00000000ffff00cf                kernel32_init
                0x000000000000f000                vma_inic32 = 0xf000

.text           0x00000000ffff00f6        0x0
 .text          0x00000000ffff00f6        0x0 src/elf/pantalla.elf

.codigo32       0x000000000000f000       0x29 dirección de carga 0x00000000fffff000
 *(.start32)
 .start32       0x000000000000f000       0x29 src/elf/start32.elf
                0x000000000000f000                start32_launcher
                0x000000000000f800                vma_inic16 = 0xf800

.codigo16       0x000000000000f800       0x26 dirección de carga 0x00000000fffff800
 *(.start16)
 .start16       0x000000000000f800       0x26 src/elf/start16.elf
                0x000000000000f800                start16_inic
                0x000000000000fd00                vma_datos = 0xfd00

.tablas         0x000000000000fd00       0x26 dirección de carga 0x00000000fffffd00
 *(.sys_tables*)
 .sys_tables    0x000000000000fd00       0x26 src/elf/tablas.elf
                0x000000000000fd20                GDTR
                0x000000000000fff0                vma_reset = 0xfff0

.codigo_reset   0x000000000000fff0        0x5 dirección de carga 0x00000000fffffff0
 *(.reset)
 .reset         0x000000000000fff0        0x5 src/elf/reset.elf

.fill_rom16     0x000000000000fff5        0xa dirección de carga 0x00000000fffffff5
 FILL mask 0x90
                0x000000000000fffe                . = ((ORIGIN (rom16) + LENGTH (rom16)) - 0x1)
 *fill*         0x000000000000fff5        0x9 90
                0x000000000000fffe        0x1 BYTE 0x90

.end_rom16      0x000000000000ffff        0x1 dirección de carga 0x00000000ffffffff
                0x000000000000ffff        0x1 BYTE 0x90
LOAD src/elf/pantalla.elf
LOAD src/elf/reset.elf
LOAD src/elf/start16.elf
LOAD src/elf/tablas.elf
LOAD src/elf/kernel.elf
LOAD src/elf/start32.elf
OUTPUT(binario/fichero.bin binary)

.data           0x0000000000010000        0x0 dirección de carga 0x0000000100000000
 .data          0x0000000000010000        0x0 src/elf/pantalla.elf

.bss            0x0000000000010000        0x0 dirección de carga 0x0000000100000000
 .bss           0x0000000000010000        0x0 src/elf/pantalla.elf

.comment        0x0000000000000000       0x35
 .comment       0x0000000000000000       0x35 src/elf/pantalla.elf

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 src/elf/pantalla.elf
