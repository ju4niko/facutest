     1                                  section     .text
     2                                  global      _start                              ;debe declararse para el linker
     3                                  
     4                                  _start:                                         ;le dice al linker el punto de inicio
     5                                  
     6                                  	; DS queda apuntando por defecto al segmento con los datos
     7 00000000 BA1C000000                  mov     edx,len                             ;longitud del mensaje
     8 00000005 B9[00000000]                mov     ecx,msg                             ;puntero al mensaje
     9 0000000A BB01000000                  mov     ebx,1                               ;file descriptor (stdout)
    10 0000000F B804000000                  mov     eax,4                               ;nro de syscall (sys_write)
    11 00000014 50                          push	rax
    12 00000015 53                          push	rbx
    13 00000016 CD80                        int     0x80                                ;invoca puerta de llamada del kernel
    14                                  
    15 00000018 5B                      	pop		rbx
    16 00000019 58                      	pop		rax
    17 0000001A BA1C000000                  mov     edx,len2                             ;longitud del mensaje
    18 0000001F B9[1C000000]                mov     ecx,msg2                             ;puntero al mensaje
    19 00000024 50                          push	rax
    20 00000025 53                          push	rbx
    21 00000026 CD80                        int     0x80                                ;invoca puerta de llamada del kernel
    22                                  
    23 00000028 5B                      	pop		rbx
    24 00000029 58                      	pop		rax
    25 0000002A BA1C000000                  mov     edx,len3                             ;longitud del mensaje
    26 0000002F B9[38000000]                mov     ecx,msg3                             ;puntero al mensaje
    27 00000034 CD80                        int     0x80                                ;invoca puerta de llamada del kernel
    28                                  
    29 00000036 B801000000              	mov		eax,1
    30 0000003B CD80                    	int		0x80
    31                                  	
    32                                  
    33                                  section     .data
    34 00000000 0A486F6C61206D756E-     msg     db  0xa,'Hola mundo en asm linux!1',0xa,0xa		;mensaje
    35 00000009 646F20656E2061736D-
    36 00000012 206C696E757821310A-
    37 0000001B 0A                 
    38                                  len     equ $ - msg  
    39 0000001C 0A486F6C61206D756E-     msg2     db  0xa,'Hola mundo en asm linux!2',0xa,0xa		;mensaje
    40 00000025 646F20656E2061736D-
    41 0000002E 206C696E757821320A-
    42 00000037 0A                 
    43                                  len2     equ $ - msg2  
    44 00000038 0A486F6C61206D756E-     msg3     db  0xa,'Hola mundo en asm linux!3',0xa,0xa		;mensaje
    45 00000041 646F20656E2061736D-
    46 0000004A 206C696E757821330A-
    47 00000053 0A                 
    48                                  len3     equ $ - msg3  
